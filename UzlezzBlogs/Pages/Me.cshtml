@page
@using UzlezzBlogs.Middleware
@model UzlezzBlogs.Pages.MeModel
@{
    var user = HttpContext.GetUser()!;
    ViewData["Title"] = $"{user.Name} profile";
}

<div class="d-flex justify-content-center mt-5">
    <div class="card shadow-lg" style="width: 100%; max-width: 400px;">
        <div class="card-body text-center">
            <avatar user-name="@user.Name" width="120" height="120" border="true" add-classes="mb-3 user-avatar" />
            <h4 class="card-title">@user.Name</h4>
        </div>

        <ul class="list-group list-group-flush">
            <li class="list-group-item text-center">
                <a asp-page="/Profile" asp-route-userName="@user.Name" class="btn btn-outline-primary w-100">My Profile</a>
            </li>
            <li class="list-group-item text-center">
                <a asp-page="/MyRatings" class="btn btn-outline-primary w-100">My Ratings</a>
            </li>
            <li class="list-group-item text-center">
                <a asp-page="/Settings" class="btn btn-outline-secondary w-100">Settings</a>
            </li>
            <li class="list-group-item text-center">
                <a asp-page="/Logout" class="btn btn-outline-danger w-100">Logout</a>
            </li>
        </ul>
    </div>
</div>

@section Scripts {
    @if (Model.ReCacheAvatar is not null && Model.ReCacheAvatar == true)
    {
        <script>
            fetch('/avatar/@user.Name', {
                headers: {
                    'Cache-Control': 'reload'
                }
            })
            .then(response => response.blob())
            .then(blob => {
                const objectUrl = URL.createObjectURL(blob)
                document.querySelector(".user-avatar").src = objectUrl
            })

            alert('Avatar update can take up to 1 hour')
        </script>
    }
}