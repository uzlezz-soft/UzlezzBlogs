@page "{userName}"
@using UzlezzBlogs.Pages.Shared
@inject IMetaDescriptionBuilder DescriptionBuilder
@model UzlezzBlogs.Pages.ProfileModel
@{
    ViewData["Title"] = $"{Model.Profile.UserName} posts | page {Model.PageIndex}";

    var user = HttpContext.GetUser();
    bool isCurrentUser = user is not null && user.Name == @Model.Profile.UserName;
}

@section AdditionalMeta {
    <meta name="description" content="@ViewData["title"]@DescriptionBuilder.BuildFromPostPreview(Model.Posts, false)" />
}

<div class="container py-5" style="max-width: 800px;">
    <div class="card shadow-sm mb-4">
        <div class="card-body text-center">
            <avatar user-name="@Model.Profile.UserName"
                    width="120"
                    height="120"
                    border="true"
                    add-classes="mb-3 @(isCurrentUser ? "comment-avatar" : "")" />

            <h3 class="card-title">@Model.Profile.UserName</h3>

            <div class="mt-3 text-start justified-content" style="white-space: normal;">
                @Html.Raw(Model.Profile.DescriptionHtml)
            </div>
        </div>
    </div>

    <h4 class="mb-3 text-center">Posts by @Model.Profile.UserName</h4>

    @foreach (var post in Model.Posts)
    {
        <post-preview-card post="@post" />
    }

    <pagination
        page-index="@Model.PageIndex"
        total-pages="@Model.TotalPages"
        generate-url="@((page) => $"/profile/{Model.Profile.UserName}?Page={page}")" />
</div>

@section Scripts {
    @if (isCurrentUser)
    {
    <script>
        const el = document.querySelector(".comment-avatar")
        el.addEventListener("click", () => window.location.href = "/Me")
    </script>
    }
}